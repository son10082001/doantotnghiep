{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { cart } from '../util/cart';\nconst initialState = {\n  cart: cart.getCart()\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCart(state, action) {\n      state.cart = action.payload;\n      cart.setCart(action.payload);\n    },\n\n    addCart(state, action) {\n      let item = { ...action.payload,\n        quantity: 1\n      };\n      const check = state.cart.some(value => value._id === item._id);\n\n      if (!check) {\n        state.cart.push(item);\n      }\n\n      cart.setCart(state.cart);\n    },\n\n    deleteCart(state, action) {\n      let item = { ...action.payload,\n        quantity: 1\n      };\n      state.cart = state.cart.filter(value => value._id !== item._id);\n      cart.setCart(state.cart);\n    },\n\n    subQuantity(state, action) {\n      let item = { ...action.payload,\n        quantity: 1\n      }; // eslint-disable-next-line array-callback-return\n\n      state.cart.filter(value => {\n        if (value._id === item._id) {\n          if (value.quantity - 1 === 0) {\n            state.cart = state.cart.filter(value => value._id !== item._id);\n          }\n\n          return value.quantity -= 1;\n        }\n      });\n      cart.setCart(state.cart);\n    },\n\n    addQuantity(state, action) {\n      let item = { ...action.payload,\n        quantity: 1\n      }; // eslint-disable-next-line array-callback-return\n\n      state.cart.filter(value => {\n        if (value._id === item._id) {\n          return value.quantity += 1;\n        }\n      });\n      cart.setCart(state.cart);\n    },\n\n    destroyCart: (state, action) => {\n      state.cart = [];\n      cart.destroyCart();\n    }\n  }\n}); //action\n\nexport const cartAction = cartSlice.actions; //select\n\nexport const selectCart = state => state.cart.cart;\nconst cartReducer = cartSlice.reducer;\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mac/Documents/Đồ án tốt nghiệp/DATN/src/redux/cartSlice.js"],"names":["createSlice","cart","initialState","getCart","cartSlice","name","reducers","setCart","state","action","payload","addCart","item","quantity","check","some","value","_id","push","deleteCart","filter","subQuantity","addQuantity","destroyCart","cartAction","actions","selectCart","cartReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { cart } from '../util/cart';\n\nconst initialState = {\n  cart: cart.getCart(),\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setCart(state, action) {\n      state.cart = action.payload;\n      cart.setCart(action.payload);\n    },\n\n    addCart(state, action) {\n      let item = {\n        ...action.payload,\n        quantity: 1,\n      };\n      const check = state.cart.some((value) => value._id === item._id);\n      if (!check) {\n        state.cart.push(item);\n      }\n      cart.setCart(state.cart);\n    },\n\n    deleteCart(state, action) {\n      let item = {\n        ...action.payload,\n        quantity: 1,\n      };\n      state.cart = state.cart.filter((value) => value._id !== item._id);\n      cart.setCart(state.cart);\n    },\n\n    subQuantity(state, action) {\n      let item = {\n        ...action.payload,\n        quantity: 1,\n      };\n      // eslint-disable-next-line array-callback-return\n      state.cart.filter((value) => {\n        if (value._id === item._id) {\n          if (value.quantity - 1 === 0) {\n            state.cart = state.cart.filter((value) => value._id !== item._id);\n          }\n          return (value.quantity -= 1);\n        }\n      });\n      cart.setCart(state.cart);\n    },\n\n    addQuantity(state, action) {\n      let item = {\n        ...action.payload,\n        quantity: 1,\n      };\n      // eslint-disable-next-line array-callback-return\n      state.cart.filter((value) => {\n        if (value._id === item._id) {\n          return (value.quantity += 1);\n        }\n      });\n      cart.setCart(state.cart);\n    },\n\n    destroyCart: (state, action) => {\n      state.cart = [];\n      cart.destroyCart();\n    },\n  },\n});\n\n//action\nexport const cartAction = cartSlice.actions;\n\n//select\nexport const selectCart = (state) => state.cart.cart;\n\nconst cartReducer = cartSlice.reducer;\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}