{"ast":null,"code":"/* eslint-disable no-useless-escape */\nexport const slugify = string => {\n  const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;';\n  const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string.toString().toLowerCase().replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a').replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e').replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i').replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o').replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u').replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y').replace(/đ/gi, 'd').replace(/\\s+/g, '-').replace(p, c => b.charAt(a.indexOf(c))).replace(/&/g, '-and-').replace(/[^\\w\\-]+/g, '').replace(/\\-\\-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n};","map":{"version":3,"sources":["/Users/mac/Documents/Đồ án tốt nghiệp/DATN/src/util/slugify.js"],"names":["slugify","string","a","b","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAIC,MAAD,IAAY;AACjC,QAAMC,CAAC,GACL,2EADF;AAEA,QAAMC,CAAC,GACL,2EADF;AAEA,QAAMC,CAAC,GAAG,IAAIC,MAAJ,CAAWH,CAAC,CAACI,KAAF,CAAQ,EAAR,EAAYC,IAAZ,CAAiB,GAAjB,CAAX,EAAkC,GAAlC,CAAV;AACA,SAAON,MAAM,CACVO,QADI,GAEJC,WAFI,GAGJC,OAHI,CAGI,qCAHJ,EAG2C,GAH3C,EAIJA,OAJI,CAII,yBAJJ,EAI+B,GAJ/B,EAKJA,OALI,CAKI,eALJ,EAKqB,GALrB,EAMJA,OANI,CAMI,qCANJ,EAM2C,GAN3C,EAOJA,OAPI,CAOI,yBAPJ,EAO+B,GAP/B,EAQJA,OARI,CAQI,aARJ,EAQmB,GARnB,EASJA,OATI,CASI,KATJ,EASW,GATX,EAUJA,OAVI,CAUI,MAVJ,EAUY,GAVZ,EAWJA,OAXI,CAWIN,CAXJ,EAWQO,CAAD,IAAOR,CAAC,CAACS,MAAF,CAASV,CAAC,CAACW,OAAF,CAAUF,CAAV,CAAT,CAXd,EAYJD,OAZI,CAYI,IAZJ,EAYU,OAZV,EAaJA,OAbI,CAaI,WAbJ,EAaiB,EAbjB,EAcJA,OAdI,CAcI,QAdJ,EAcc,GAdd,EAeJA,OAfI,CAeI,KAfJ,EAeW,EAfX,EAgBJA,OAhBI,CAgBI,KAhBJ,EAgBW,EAhBX,CAAP;AAiBD,CAvBM","sourcesContent":["/* eslint-disable no-useless-escape */\nexport const slugify = (string) => {\n  const a =\n    'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;';\n  const b =\n    'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a')\n    .replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e')\n    .replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i')\n    .replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o')\n    .replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u')\n    .replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y')\n    .replace(/đ/gi, 'd')\n    .replace(/\\s+/g, '-')\n    .replace(p, (c) => b.charAt(a.indexOf(c)))\n    .replace(/&/g, '-and-')\n    .replace(/[^\\w\\-]+/g, '')\n    .replace(/\\-\\-+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n};\n"]},"metadata":{},"sourceType":"module"}